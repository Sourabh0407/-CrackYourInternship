//122. Best Time to Buy and Sell Stock II
class Solution {

    public int solve(int indx, int buy, int[] prices, int[][] dp){
        if(indx==prices.length)
            return 0;

        int profit =0;
        if(dp[indx][buy] != 0){
            if(dp[indx][buy]==-1){
                return 0;
            }else{
                return dp[indx][buy];
            }
        }
        if(buy==1){
            int buykro = -prices[indx] + solve(indx+1, 0, prices, dp);
            int skipkro = 0 + solve(indx+1, 1, prices, dp);
            profit = Math.max(buykro, skipkro);
        }else{
            int sellkro = +prices[indx] + solve(indx+1, 1, prices, dp);
            int skipkro = 0 + solve(indx+1, 0, prices, dp);
            profit = Math.max(sellkro, skipkro);
        }
        dp[indx][buy] = profit==0? -1: profit;
       
        return profit;
    }
    public int maxProfit(int[] prices) {
        int n=prices.length;
        int[][] dp = new int[n][2];
        return solve(0, 1, prices, dp);
    }
}
