//3Sum
class Solution {
    public List<List<Integer>> solve1(int[] nums)
    {
         Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<>();
        int n = nums.length;
        for(int i=0;i<nums.length-2;i++){
            if(i!=0 && nums[i]==nums[i-1])continue;
            List<Integer> temp = new ArrayList<>(3);
            temp.add(nums[i]);
            temp.add(0);
            temp.add(0);
            int target = 0 -(nums[i]);

            //get 2 sum
            int x = i+1, j = nums.length-1;
            
            while(x<j){
                //while(x < n-1 && nums[x] == nums[x+1]) x++;
                //while(j>0 && nums[j] == nums[j-1]) j--;
                int s = nums[x] + nums[j];
                if(s==target){
                    temp.set(1, nums[x]);
                    temp.set(2, nums[j]);
                    ans.add(new ArrayList<>(temp));
                    x++;
                    j--;
                }else if(s>target){
                    j--;
                }else if(s<target){
                    x++;
                }
            }

        }

        return ans;
    }

    public List<List<Integer>> solve2(int[] nums){
        Arrays.sort(nums);

        List<List<Integer>> ans = new ArrayList<>();

        for(int i=0;i<nums.length;i++){
            if(i>0 && nums[i-1] == nums[i])continue;

            int j = i+1;
            int k = nums.length-1;

            while(j<k){
                int sum = nums[i] + nums[j] +  nums[k];
                if(sum < 0){
                        j++;
                }else if(sum > 0 ){
                        k--;
                }else{
                    List<Integer> tmp = new ArrayList<>();
                    tmp.add(nums[i]);
                    tmp.add(nums[j]);
                    tmp.add(nums[k]);
                    ans.add(new ArrayList<>(tmp));
                    j++;
                    k--;
                    while(j<k && nums[j]==nums[j-1])j++;
                    while(j<k && nums[k]==nums[k+1])k--;
                }
            }

        }

        return ans;
    }
    public List<List<Integer>> threeSum(int[] nums) {
       return solve2(nums);
    }
}
