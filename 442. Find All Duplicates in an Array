//442. Find All Duplicates in an Array
class Solution {
    public List<Integer> approach1(int[] nums){
        List<Integer> ans = new ArrayList<>();

        for(int i=0;i<nums.length;i++)
        {
            int x = Math.abs(nums[i]);
            if(nums[x-1]<0){
                ans.add(x);
            }else{
                nums[x-1] =  0 - nums[x-1];
            }
        }

        return ans;
    }

    public List<Integer> approach2(int[] nums){
        List<Integer> ans = new ArrayList<>();
        HashSet<Integer> old = new HashSet<>();

        for(int i: nums){
            if(old.contains(i)){
                ans.add(i);
            }else{
                old.add(i);
            }
        }
        return ans;
    }
     public List<Integer> approach3(int[] nums){
        List<Integer> ans = new ArrayList<>();
        Map<Integer,Integer> old = new HashMap<>();

        for(int i: nums){
            if(old.containsKey(i)){
                ans.add(i);
            }else{
                old.put(i, 1);
            }
        }
        return ans;
    }
    public List<Integer> findDuplicates(int[] nums) {
       // return approach1(nums);   //O(N)

       // return approach2(nums); //O(n) && SC:O(N/2)
        
        return approach3(nums);  //O(n) && SC:O(N/2)
    }
}
